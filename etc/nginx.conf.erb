user nginx;
worker_processes 4;
pid /run/nginx.pid;
daemon off;

events {
  worker_connections 768;
}

<% require 'json' %>
<% configuration = JSON.parse(ENV.fetch('PROXY_CONFIGURATION')) %>
<% ssl = !!ENV['SSL'] %>

stream {
<% configuration.each_with_index do |(listener_port, servers), idx| %>
  <% upstream = "backend#{idx}" %>

  upstream <%= upstream %> {
  <% servers.each do |server_host, server_port| %>
    server <%= "#{server_host}:#{server_port}" %>;
  <% end %>
  }

  server {
    listen <%= listener_port %> <%= 'ssl' if ssl %>;
    proxy_pass <%= upstream %>;
    proxy_timeout <%= ENV.fetch('IDLE_TIMEOUT', 600) %>;

    <% if ssl %>
      ssl_certificate <%= ENV.fetch('SSL_CERTIFICATE_FILE') %>;
      ssl_certificate_key <%= ENV.fetch('SSL_KEY_FILE') %>;

      ssl_ciphers <%= ENV['SSL_CIPHERS'] %>;
      ssl_protocols <%= ENV['SSL_PROTOCOLS'] %>;
      ssl_prefer_server_ciphers on;

      ssl_dhparam /etc/dhparams.pem;

      ssl_session_timeout 1d;
      ssl_session_cache shared:SSL:8m;
      ssl_session_tickets off;
    <% end %>
  }
<% end %>


  log_format tcp_log  '$remote_addr:$remote_port $ssl_protocol/$ssl_cipher'
                      '- - [$time_local] '
                      '$protocol $status $bytes_sent $bytes_received '
                      '$session_time $upstream_addr $upstream_connect_time';

  access_log /proc/self/fd/1 tcp_log;
  error_log /proc/self/fd/2;
}
